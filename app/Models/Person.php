<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Carbon;
use Illuminate\Support\Str;

class Person extends Model
{
    use HasFactory;
    protected $table = "persons";
    protected $guarded = [];
    protected $appends = ['age', 'type_roles'];

    public $incrementing = false;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($person){
            $person->id = (string) Str::uuid();
        });
    }

    public function roles(){
        return $this->belongsToMany(Role::class);
    }

    public function document(){
        return $this->morphOne(Document::class, 'documentable');
    }

    public function post(){
        return $this->belongsTo(Post::class);
    }

    public function gender(){
        return $this->belongsTo(Gender::class);
    }

    public function maritalStatus(){
        return $this->belongsTo(MaritalStatus::class);
    }

    public function getAgeAttribute(){
        $age = Carbon::parse($this->birthdate)->age;
        return $age;
    }

    public function getTypeRolesAttribute(){
        $roles = null;
        foreach ($this->roles as $index => $role){

            $roles = ($index + 1)  === $this->roles->count()
                    ? $roles .= $role->name . '.'
                    : $roles .= $role->name . ', ';
            
        }
        return $roles;
    }
}
